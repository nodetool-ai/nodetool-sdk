//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the NodeTool SDK Type Generator.
//     Runtime Version: Python
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using MessagePack;
using System.Collections.Generic;

namespace Nodetool.Types.Nodes.Core;

/// <summary>
/// Provides access to all core NodeTool nodes.
/// This is an auto-generated file containing node information for core NodeTool nodes.
/// </summary>
public static class CoreNodes
{
    /// <summary>
    /// Provides static access to all core node information.
    /// </summary>
    public static class Nodes
    {
        #region Core Nodes
        // Node types from nodetool-core package
        public static readonly System.Type AbsolutePath = typeof(Nodetool.Types.Nodes.Core.AbsolutePath);
        public static readonly System.Type AccessedTime = typeof(Nodetool.Types.Nodes.Core.AccessedTime);
        public static readonly System.Type Add = typeof(Nodetool.Types.Nodes.Core.Add);
        public static readonly System.Type AddAudio = typeof(Nodetool.Types.Nodes.Core.AddAudio);
        public static readonly System.Type AddColumn = typeof(Nodetool.Types.Nodes.Core.AddColumn);
        public static readonly System.Type AddLabel = typeof(Nodetool.Types.Nodes.Core.AddLabel);
        public static readonly System.Type AddSubtitles = typeof(Nodetool.Types.Nodes.Core.AddSubtitles);
        public static readonly System.Type AddTimeDelta = typeof(Nodetool.Types.Nodes.Core.AddTimeDelta);
        public static readonly System.Type AgentNode = typeof(Nodetool.Types.Nodes.Core.AgentNode);
        public static readonly System.Type AgentStreaming = typeof(Nodetool.Types.Nodes.Core.AgentStreaming);
        public static readonly System.Type Aggregate = typeof(Nodetool.Types.Nodes.Core.Aggregate);
        public static readonly System.Type All = typeof(Nodetool.Types.Nodes.Core.All);
        public static readonly System.Type AnimateDiffNode = typeof(Nodetool.Types.Nodes.Core.AnimateDiffNode);
        public static readonly System.Type Append = typeof(Nodetool.Types.Nodes.Core.Append);
        public static readonly System.Type ArgMax = typeof(Nodetool.Types.Nodes.Core.ArgMax);
        public static readonly System.Type ArrayOutput = typeof(Nodetool.Types.Nodes.Core.ArrayOutput);
        public static readonly System.Type Audio = typeof(Nodetool.Types.Nodes.Core.Audio);
        public static readonly System.Type AudioClassification = typeof(Nodetool.Types.Nodes.Core.AudioClassification);
        public static readonly System.Type AudioClassifier = typeof(Nodetool.Types.Nodes.Core.AudioClassifier);
        public static readonly System.Type AudioInput = typeof(Nodetool.Types.Nodes.Core.AudioInput);
        public static readonly System.Type AudioLDM = typeof(Nodetool.Types.Nodes.Core.AudioLDM);
        public static readonly System.Type AudioLDM2 = typeof(Nodetool.Types.Nodes.Core.AudioLDM2);
        public static readonly System.Type AudioMixer = typeof(Nodetool.Types.Nodes.Core.AudioMixer);
        public static readonly System.Type AudioOutput = typeof(Nodetool.Types.Nodes.Core.AudioOutput);
        public static readonly System.Type AutomaticSpeechRecognition = typeof(Nodetool.Types.Nodes.Core.AutomaticSpeechRecognition);
        public static readonly System.Type Average = typeof(Nodetool.Types.Nodes.Core.Average);
        public static readonly System.Type Bark = typeof(Nodetool.Types.Nodes.Core.Bark);
        public static readonly System.Type BaseUrl = typeof(Nodetool.Types.Nodes.Core.BaseUrl);
        public static readonly System.Type Basename = typeof(Nodetool.Types.Nodes.Core.Basename);
        public static readonly System.Type BatchToList = typeof(Nodetool.Types.Nodes.Core.BatchToList);
        public static readonly System.Type BinaryOperation = typeof(Nodetool.Types.Nodes.Core.BinaryOperation);
        public static readonly System.Type Blur = typeof(Nodetool.Types.Nodes.Core.Blur);
        public static readonly System.Type Bool = typeof(Nodetool.Types.Nodes.Core.Bool);
        public static readonly System.Type BooleanInput = typeof(Nodetool.Types.Nodes.Core.BooleanInput);
        public static readonly System.Type BooleanOutput = typeof(Nodetool.Types.Nodes.Core.BooleanOutput);
        public static readonly System.Type Browser = typeof(Nodetool.Types.Nodes.Core.Browser);
        public static readonly System.Type BrowserNavigation = typeof(Nodetool.Types.Nodes.Core.BrowserNavigation);
        public static readonly System.Type BrowserUseNode = typeof(Nodetool.Types.Nodes.Core.BrowserUseNode);
        public static readonly System.Type ChartGenerator = typeof(Nodetool.Types.Nodes.Core.ChartGenerator);
        public static readonly System.Type ChatInput = typeof(Nodetool.Types.Nodes.Core.ChatInput);
        public static readonly System.Type ChromaKey = typeof(Nodetool.Types.Nodes.Core.ChromaKey);
        public static readonly System.Type Chunk = typeof(Nodetool.Types.Nodes.Core.Chunk);
        public static readonly System.Type ChunksToSRT = typeof(Nodetool.Types.Nodes.Core.ChunksToSRT);
        public static readonly System.Type Classifier = typeof(Nodetool.Types.Nodes.Core.Classifier);
        public static readonly System.Type CollectionInput = typeof(Nodetool.Types.Nodes.Core.CollectionInput);
        public static readonly System.Type CollectionNode = typeof(Nodetool.Types.Nodes.Core.CollectionNode);
        public static readonly System.Type CollectorNode = typeof(Nodetool.Types.Nodes.Core.CollectorNode);
        public static readonly System.Type ColorBalance = typeof(Nodetool.Types.Nodes.Core.ColorBalance);
        public static readonly System.Type Combine = typeof(Nodetool.Types.Nodes.Core.Combine);
        public static readonly System.Type Compare = typeof(Nodetool.Types.Nodes.Core.Compare);
        public static readonly System.Type Compress = typeof(Nodetool.Types.Nodes.Core.Compress);
        public static readonly System.Type Concat = typeof(Nodetool.Types.Nodes.Core.Concat);
        public static readonly System.Type ConcatList = typeof(Nodetool.Types.Nodes.Core.ConcatList);
        public static readonly System.Type ConditionalSwitch = typeof(Nodetool.Types.Nodes.Core.ConditionalSwitch);
        public static readonly System.Type Constant = typeof(Nodetool.Types.Nodes.Core.Constant);
        public static readonly System.Type Contains = typeof(Nodetool.Types.Nodes.Core.Contains);
        public static readonly System.Type ConvertToArray = typeof(Nodetool.Types.Nodes.Core.ConvertToArray);
        public static readonly System.Type ConvertToMarkdown = typeof(Nodetool.Types.Nodes.Core.ConvertToMarkdown);
        public static readonly System.Type CopyFile = typeof(Nodetool.Types.Nodes.Core.CopyFile);
        public static readonly System.Type Cosine = typeof(Nodetool.Types.Nodes.Core.Cosine);
        public static readonly System.Type Count = typeof(Nodetool.Types.Nodes.Core.Count);
        public static readonly System.Type CountTokens = typeof(Nodetool.Types.Nodes.Core.CountTokens);
        public static readonly System.Type CreateDirectory = typeof(Nodetool.Types.Nodes.Core.CreateDirectory);
        public static readonly System.Type CreateImage = typeof(Nodetool.Types.Nodes.Core.CreateImage);
        public static readonly System.Type CreateSilence = typeof(Nodetool.Types.Nodes.Core.CreateSilence);
        public static readonly System.Type CreateTarFile = typeof(Nodetool.Types.Nodes.Core.CreateTarFile);
        public static readonly System.Type CreatedTime = typeof(Nodetool.Types.Nodes.Core.CreatedTime);
        public static readonly System.Type Crop = typeof(Nodetool.Types.Nodes.Core.Crop);
        public static readonly System.Type DanceDiffusion = typeof(Nodetool.Types.Nodes.Core.DanceDiffusion);
        public static readonly System.Type DataFrame = typeof(Nodetool.Types.Nodes.Core.DataFrame);
        public static readonly System.Type DataGenerator = typeof(Nodetool.Types.Nodes.Core.DataGenerator);
        public static readonly System.Type DataStreamer = typeof(Nodetool.Types.Nodes.Core.DataStreamer);
        public static readonly System.Type DataframeAgent = typeof(Nodetool.Types.Nodes.Core.DataframeAgent);
        public static readonly System.Type DataframeInput = typeof(Nodetool.Types.Nodes.Core.DataframeInput);
        public static readonly System.Type DataframeOutput = typeof(Nodetool.Types.Nodes.Core.DataframeOutput);
        public static readonly System.Type Date = typeof(Nodetool.Types.Nodes.Core.Date);
        public static readonly System.Type DateDifference = typeof(Nodetool.Types.Nodes.Core.DateDifference);
        public static readonly System.Type DateRange = typeof(Nodetool.Types.Nodes.Core.DateRange);
        public static readonly System.Type DateTime = typeof(Nodetool.Types.Nodes.Core.DateTime);
        public static readonly System.Type DateToDatetime = typeof(Nodetool.Types.Nodes.Core.DateToDatetime);
        public static readonly System.Type DatetimeToDate = typeof(Nodetool.Types.Nodes.Core.DatetimeToDate);
        public static readonly System.Type DaysAgo = typeof(Nodetool.Types.Nodes.Core.DaysAgo);
        public static readonly System.Type DaysFromNow = typeof(Nodetool.Types.Nodes.Core.DaysFromNow);
        public static readonly System.Type Decode = typeof(Nodetool.Types.Nodes.Core.Decode);
        public static readonly System.Type Decompress = typeof(Nodetool.Types.Nodes.Core.Decompress);
        public static readonly System.Type Dedent = typeof(Nodetool.Types.Nodes.Core.Dedent);
        public static readonly System.Type Dedupe = typeof(Nodetool.Types.Nodes.Core.Dedupe);
        public static readonly System.Type DeleteRequest = typeof(Nodetool.Types.Nodes.Core.DeleteRequest);
        public static readonly System.Type Denoise = typeof(Nodetool.Types.Nodes.Core.Denoise);
        public static readonly System.Type DepthEstimation = typeof(Nodetool.Types.Nodes.Core.DepthEstimation);
        public static readonly System.Type Dict = typeof(Nodetool.Types.Nodes.Core.Dict);
        public static readonly System.Type DictAgent = typeof(Nodetool.Types.Nodes.Core.DictAgent);
        public static readonly System.Type DictionaryOutput = typeof(Nodetool.Types.Nodes.Core.DictionaryOutput);
        public static readonly System.Type Difference = typeof(Nodetool.Types.Nodes.Core.Difference);
        public static readonly System.Type Dirname = typeof(Nodetool.Types.Nodes.Core.Dirname);
        public static readonly System.Type Divide = typeof(Nodetool.Types.Nodes.Core.Divide);
        public static readonly System.Type Document = typeof(Nodetool.Types.Nodes.Core.Document);
        public static readonly System.Type DocumentFileInput = typeof(Nodetool.Types.Nodes.Core.DocumentFileInput);
        public static readonly System.Type DocumentInput = typeof(Nodetool.Types.Nodes.Core.DocumentInput);
        public static readonly System.Type DocumentOutput = typeof(Nodetool.Types.Nodes.Core.DocumentOutput);
        public static readonly System.Type DownloadDataframe = typeof(Nodetool.Types.Nodes.Core.DownloadDataframe);
        public static readonly System.Type DownloadFile = typeof(Nodetool.Types.Nodes.Core.DownloadFile);
        public static readonly System.Type DownloadFiles = typeof(Nodetool.Types.Nodes.Core.DownloadFiles);
        public static readonly System.Type DropDuplicates = typeof(Nodetool.Types.Nodes.Core.DropDuplicates);
        public static readonly System.Type DropNA = typeof(Nodetool.Types.Nodes.Core.DropNA);
        public static readonly System.Type EmailFields = typeof(Nodetool.Types.Nodes.Core.EmailFields);
        public static readonly System.Type Embedding = typeof(Nodetool.Types.Nodes.Core.Embedding);
        public static readonly System.Type Encode = typeof(Nodetool.Types.Nodes.Core.Encode);
        public static readonly System.Type EncodeQueryParams = typeof(Nodetool.Types.Nodes.Core.EncodeQueryParams);
        public static readonly System.Type EndOfDay = typeof(Nodetool.Types.Nodes.Core.EndOfDay);
        public static readonly System.Type EndOfMonth = typeof(Nodetool.Types.Nodes.Core.EndOfMonth);
        public static readonly System.Type EndOfWeek = typeof(Nodetool.Types.Nodes.Core.EndOfWeek);
        public static readonly System.Type EndOfYear = typeof(Nodetool.Types.Nodes.Core.EndOfYear);
        public static readonly System.Type EndsWith = typeof(Nodetool.Types.Nodes.Core.EndsWith);
        public static readonly System.Type Escape = typeof(Nodetool.Types.Nodes.Core.Escape);
        public static readonly System.Type EvaluateExpression = typeof(Nodetool.Types.Nodes.Core.EvaluateExpression);
        public static readonly System.Type ExecutePython = typeof(Nodetool.Types.Nodes.Core.ExecutePython);
        public static readonly System.Type Extend = typeof(Nodetool.Types.Nodes.Core.Extend);
        public static readonly System.Type Extract = typeof(Nodetool.Types.Nodes.Core.Extract);
        public static readonly System.Type ExtractAudio = typeof(Nodetool.Types.Nodes.Core.ExtractAudio);
        public static readonly System.Type ExtractBulletLists = typeof(Nodetool.Types.Nodes.Core.ExtractBulletLists);
        public static readonly System.Type ExtractCodeBlocks = typeof(Nodetool.Types.Nodes.Core.ExtractCodeBlocks);
        public static readonly System.Type ExtractColumn = typeof(Nodetool.Types.Nodes.Core.ExtractColumn);
        public static readonly System.Type ExtractHeaders = typeof(Nodetool.Types.Nodes.Core.ExtractHeaders);
        public static readonly System.Type ExtractImages = typeof(Nodetool.Types.Nodes.Core.ExtractImages);
        public static readonly System.Type ExtractJSON = typeof(Nodetool.Types.Nodes.Core.ExtractJSON);
        public static readonly System.Type ExtractLinks = typeof(Nodetool.Types.Nodes.Core.ExtractLinks);
        public static readonly System.Type ExtractMarkdown = typeof(Nodetool.Types.Nodes.Core.ExtractMarkdown);
        public static readonly System.Type ExtractMetadata = typeof(Nodetool.Types.Nodes.Core.ExtractMetadata);
        public static readonly System.Type ExtractNumberedLists = typeof(Nodetool.Types.Nodes.Core.ExtractNumberedLists);
        public static readonly System.Type ExtractRegex = typeof(Nodetool.Types.Nodes.Core.ExtractRegex);
        public static readonly System.Type ExtractTables = typeof(Nodetool.Types.Nodes.Core.ExtractTables);
        public static readonly System.Type ExtractTarFile = typeof(Nodetool.Types.Nodes.Core.ExtractTarFile);
        public static readonly System.Type ExtractText = typeof(Nodetool.Types.Nodes.Core.ExtractText);
        public static readonly System.Type ExtractTextBlocks = typeof(Nodetool.Types.Nodes.Core.ExtractTextBlocks);
        public static readonly System.Type ExtractTextWithStyle = typeof(Nodetool.Types.Nodes.Core.ExtractTextWithStyle);
        public static readonly System.Type ExtractVideos = typeof(Nodetool.Types.Nodes.Core.ExtractVideos);
        public static readonly System.Type Extractor = typeof(Nodetool.Types.Nodes.Core.Extractor);
        public static readonly System.Type FTPDownloadFile = typeof(Nodetool.Types.Nodes.Core.FTPDownloadFile);
        public static readonly System.Type FTPListDirectory = typeof(Nodetool.Types.Nodes.Core.FTPListDirectory);
        public static readonly System.Type FTPUploadFile = typeof(Nodetool.Types.Nodes.Core.FTPUploadFile);
        public static readonly System.Type FadeIn = typeof(Nodetool.Types.Nodes.Core.FadeIn);
        public static readonly System.Type FadeOut = typeof(Nodetool.Types.Nodes.Core.FadeOut);
        public static readonly System.Type FeatureExtraction = typeof(Nodetool.Types.Nodes.Core.FeatureExtraction);
        public static readonly System.Type FetchPage = typeof(Nodetool.Types.Nodes.Core.FetchPage);
        public static readonly System.Type FileExists = typeof(Nodetool.Types.Nodes.Core.FileExists);
        public static readonly System.Type FileExtension = typeof(Nodetool.Types.Nodes.Core.FileExtension);
        public static readonly System.Type FileName = typeof(Nodetool.Types.Nodes.Core.FileName);
        public static readonly System.Type FileNameMatch = typeof(Nodetool.Types.Nodes.Core.FileNameMatch);
        public static readonly System.Type Fill = typeof(Nodetool.Types.Nodes.Core.Fill);
        public static readonly System.Type FillMask = typeof(Nodetool.Types.Nodes.Core.FillMask);
        public static readonly System.Type FillNA = typeof(Nodetool.Types.Nodes.Core.FillNA);
        public static readonly System.Type Filter = typeof(Nodetool.Types.Nodes.Core.Filter);
        public static readonly System.Type FilterDicts = typeof(Nodetool.Types.Nodes.Core.FilterDicts);
        public static readonly System.Type FilterDictsByNumber = typeof(Nodetool.Types.Nodes.Core.FilterDictsByNumber);
        public static readonly System.Type FilterDictsByRange = typeof(Nodetool.Types.Nodes.Core.FilterDictsByRange);
        public static readonly System.Type FilterDictsByValue = typeof(Nodetool.Types.Nodes.Core.FilterDictsByValue);
        public static readonly System.Type FilterDictsRegex = typeof(Nodetool.Types.Nodes.Core.FilterDictsRegex);
        public static readonly System.Type FilterFileNames = typeof(Nodetool.Types.Nodes.Core.FilterFileNames);
        public static readonly System.Type FilterJSON = typeof(Nodetool.Types.Nodes.Core.FilterJSON);
        public static readonly System.Type FilterNone = typeof(Nodetool.Types.Nodes.Core.FilterNone);
        public static readonly System.Type FilterNumberRange = typeof(Nodetool.Types.Nodes.Core.FilterNumberRange);
        public static readonly System.Type FilterNumbers = typeof(Nodetool.Types.Nodes.Core.FilterNumbers);
        public static readonly System.Type FilterRegex = typeof(Nodetool.Types.Nodes.Core.FilterRegex);
        public static readonly System.Type FilterStrings = typeof(Nodetool.Types.Nodes.Core.FilterStrings);
        public static readonly System.Type FilterValidURLs = typeof(Nodetool.Types.Nodes.Core.FilterValidURLs);
        public static readonly System.Type FindAllRegex = typeof(Nodetool.Types.Nodes.Core.FindAllRegex);
        public static readonly System.Type FindRow = typeof(Nodetool.Types.Nodes.Core.FindRow);
        public static readonly System.Type Fit = typeof(Nodetool.Types.Nodes.Core.Fit);
        public static readonly System.Type Flatten = typeof(Nodetool.Types.Nodes.Core.Flatten);
        public static readonly System.Type Float = typeof(Nodetool.Types.Nodes.Core.Float);
        public static readonly System.Type FloatInput = typeof(Nodetool.Types.Nodes.Core.FloatInput);
        public static readonly System.Type FloatOutput = typeof(Nodetool.Types.Nodes.Core.FloatOutput);
        public static readonly System.Type FormatDateTime = typeof(Nodetool.Types.Nodes.Core.FormatDateTime);
        public static readonly System.Type FormatText = typeof(Nodetool.Types.Nodes.Core.FormatText);
        public static readonly System.Type Fps = typeof(Nodetool.Types.Nodes.Core.Fps);
        public static readonly System.Type FrameIterator = typeof(Nodetool.Types.Nodes.Core.FrameIterator);
        public static readonly System.Type FrameToVideo = typeof(Nodetool.Types.Nodes.Core.FrameToVideo);
        public static readonly System.Type FromList = typeof(Nodetool.Types.Nodes.Core.FromList);
        public static readonly System.Type GenerateSequence = typeof(Nodetool.Types.Nodes.Core.GenerateSequence);
        public static readonly System.Type GetCloseMatches = typeof(Nodetool.Types.Nodes.Core.GetCloseMatches);
        public static readonly System.Type GetDirectory = typeof(Nodetool.Types.Nodes.Core.GetDirectory);
        public static readonly System.Type GetDocuments = typeof(Nodetool.Types.Nodes.Core.GetDocuments);
        public static readonly System.Type GetElement = typeof(Nodetool.Types.Nodes.Core.GetElement);
        public static readonly System.Type GetEnvironmentVariable = typeof(Nodetool.Types.Nodes.Core.GetEnvironmentVariable);
        public static readonly System.Type GetFileSize = typeof(Nodetool.Types.Nodes.Core.GetFileSize);
        public static readonly System.Type GetJSONPathBool = typeof(Nodetool.Types.Nodes.Core.GetJSONPathBool);
        public static readonly System.Type GetJSONPathDict = typeof(Nodetool.Types.Nodes.Core.GetJSONPathDict);
        public static readonly System.Type GetJSONPathFloat = typeof(Nodetool.Types.Nodes.Core.GetJSONPathFloat);
        public static readonly System.Type GetJSONPathInt = typeof(Nodetool.Types.Nodes.Core.GetJSONPathInt);
        public static readonly System.Type GetJSONPathList = typeof(Nodetool.Types.Nodes.Core.GetJSONPathList);
        public static readonly System.Type GetJSONPathStr = typeof(Nodetool.Types.Nodes.Core.GetJSONPathStr);
        public static readonly System.Type GetMetadata = typeof(Nodetool.Types.Nodes.Core.GetMetadata);
        public static readonly System.Type GetPathInfo = typeof(Nodetool.Types.Nodes.Core.GetPathInfo);
        public static readonly System.Type GetQuarter = typeof(Nodetool.Types.Nodes.Core.GetQuarter);
        public static readonly System.Type GetRequest = typeof(Nodetool.Types.Nodes.Core.GetRequest);
        public static readonly System.Type GetRequestBinary = typeof(Nodetool.Types.Nodes.Core.GetRequestBinary);
        public static readonly System.Type GetRequestDocument = typeof(Nodetool.Types.Nodes.Core.GetRequestDocument);
        public static readonly System.Type GetSecret = typeof(Nodetool.Types.Nodes.Core.GetSecret);
        public static readonly System.Type GetSystemInfo = typeof(Nodetool.Types.Nodes.Core.GetSystemInfo);
        public static readonly System.Type GetValue = typeof(Nodetool.Types.Nodes.Core.GetValue);
        public static readonly System.Type GetWeekday = typeof(Nodetool.Types.Nodes.Core.GetWeekday);
        public static readonly System.Type GmailSearch = typeof(Nodetool.Types.Nodes.Core.GmailSearch);
        public static readonly System.Type GoogleFinance = typeof(Nodetool.Types.Nodes.Core.GoogleFinance);
        public static readonly System.Type GoogleImages = typeof(Nodetool.Types.Nodes.Core.GoogleImages);
        public static readonly System.Type GoogleJobs = typeof(Nodetool.Types.Nodes.Core.GoogleJobs);
        public static readonly System.Type GoogleLens = typeof(Nodetool.Types.Nodes.Core.GoogleLens);
        public static readonly System.Type GoogleMaps = typeof(Nodetool.Types.Nodes.Core.GoogleMaps);
        public static readonly System.Type GoogleNews = typeof(Nodetool.Types.Nodes.Core.GoogleNews);
        public static readonly System.Type GoogleSearch = typeof(Nodetool.Types.Nodes.Core.GoogleSearch);
        public static readonly System.Type GoogleShopping = typeof(Nodetool.Types.Nodes.Core.GoogleShopping);
        public static readonly System.Type GzipCompress = typeof(Nodetool.Types.Nodes.Core.GzipCompress);
        public static readonly System.Type GzipDecompress = typeof(Nodetool.Types.Nodes.Core.GzipDecompress);
        public static readonly System.Type HTMLSplitter = typeof(Nodetool.Types.Nodes.Core.HTMLSplitter);
        public static readonly System.Type HTMLToText = typeof(Nodetool.Types.Nodes.Core.HTMLToText);
        public static readonly System.Type HasLength = typeof(Nodetool.Types.Nodes.Core.HasLength);
        public static readonly System.Type HashFile = typeof(Nodetool.Types.Nodes.Core.HashFile);
        public static readonly System.Type HashString = typeof(Nodetool.Types.Nodes.Core.HashString);
        public static readonly System.Type HeadRequest = typeof(Nodetool.Types.Nodes.Core.HeadRequest);
        public static readonly System.Type HoursAgo = typeof(Nodetool.Types.Nodes.Core.HoursAgo);
        public static readonly System.Type HoursFromNow = typeof(Nodetool.Types.Nodes.Core.HoursFromNow);
        public static readonly System.Type HuggingFaceInferenceNode = typeof(Nodetool.Types.Nodes.Core.HuggingFaceInferenceNode);
        public static readonly System.Type HybridSearch = typeof(Nodetool.Types.Nodes.Core.HybridSearch);
        public static readonly System.Type If = typeof(Nodetool.Types.Nodes.Core.If);
        public static readonly System.Type Image = typeof(Nodetool.Types.Nodes.Core.Image);
        public static readonly System.Type ImageClassification = typeof(Nodetool.Types.Nodes.Core.ImageClassification);
        public static readonly System.Type ImageClassifier = typeof(Nodetool.Types.Nodes.Core.ImageClassifier);
        public static readonly System.Type ImageDownloader = typeof(Nodetool.Types.Nodes.Core.ImageDownloader);
        public static readonly System.Type ImageGeneration = typeof(Nodetool.Types.Nodes.Core.ImageGeneration);
        public static readonly System.Type ImageInput = typeof(Nodetool.Types.Nodes.Core.ImageInput);
        public static readonly System.Type ImageOutput = typeof(Nodetool.Types.Nodes.Core.ImageOutput);
        public static readonly System.Type ImageSegmentation = typeof(Nodetool.Types.Nodes.Core.ImageSegmentation);
        public static readonly System.Type ImageToImage = typeof(Nodetool.Types.Nodes.Core.ImageToImage);
        public static readonly System.Type ImageToText = typeof(Nodetool.Types.Nodes.Core.ImageToText);
        public static readonly System.Type ImportCSV = typeof(Nodetool.Types.Nodes.Core.ImportCSV);
        public static readonly System.Type Indent = typeof(Nodetool.Types.Nodes.Core.Indent);
        public static readonly System.Type IndexAggregatedText = typeof(Nodetool.Types.Nodes.Core.IndexAggregatedText);
        public static readonly System.Type IndexEmbedding = typeof(Nodetool.Types.Nodes.Core.IndexEmbedding);
        public static readonly System.Type IndexImage = typeof(Nodetool.Types.Nodes.Core.IndexImage);
        public static readonly System.Type IndexImages = typeof(Nodetool.Types.Nodes.Core.IndexImages);
        public static readonly System.Type IndexString = typeof(Nodetool.Types.Nodes.Core.IndexString);
        public static readonly System.Type IndexTextChunk = typeof(Nodetool.Types.Nodes.Core.IndexTextChunk);
        public static readonly System.Type IndexTextChunks = typeof(Nodetool.Types.Nodes.Core.IndexTextChunks);
        public static readonly System.Type Integer = typeof(Nodetool.Types.Nodes.Core.Integer);
        public static readonly System.Type IntegerInput = typeof(Nodetool.Types.Nodes.Core.IntegerInput);
        public static readonly System.Type IntegerOutput = typeof(Nodetool.Types.Nodes.Core.IntegerOutput);
        public static readonly System.Type Intersection = typeof(Nodetool.Types.Nodes.Core.Intersection);
        public static readonly System.Type IsDateInRange = typeof(Nodetool.Types.Nodes.Core.IsDateInRange);
        public static readonly System.Type IsDirectory = typeof(Nodetool.Types.Nodes.Core.IsDirectory);
        public static readonly System.Type IsEmpty = typeof(Nodetool.Types.Nodes.Core.IsEmpty);
        public static readonly System.Type IsFile = typeof(Nodetool.Types.Nodes.Core.IsFile);
        public static readonly System.Type IsIn = typeof(Nodetool.Types.Nodes.Core.IsIn);
        public static readonly System.Type IsNone = typeof(Nodetool.Types.Nodes.Core.IsNone);
        public static readonly System.Type IteratorNode = typeof(Nodetool.Types.Nodes.Core.IteratorNode);
        public static readonly System.Type JSON = typeof(Nodetool.Types.Nodes.Core.JSON);
        public static readonly System.Type JSONGetRequest = typeof(Nodetool.Types.Nodes.Core.JSONGetRequest);
        public static readonly System.Type JSONPatchRequest = typeof(Nodetool.Types.Nodes.Core.JSONPatchRequest);
        public static readonly System.Type JSONPostRequest = typeof(Nodetool.Types.Nodes.Core.JSONPostRequest);
        public static readonly System.Type JSONPutRequest = typeof(Nodetool.Types.Nodes.Core.JSONPutRequest);
        public static readonly System.Type JSONSplitter = typeof(Nodetool.Types.Nodes.Core.JSONSplitter);
        public static readonly System.Type JSONTemplate = typeof(Nodetool.Types.Nodes.Core.JSONTemplate);
        public static readonly System.Type JSONToDataframe = typeof(Nodetool.Types.Nodes.Core.JSONToDataframe);
        public static readonly System.Type Join = typeof(Nodetool.Types.Nodes.Core.Join);
        public static readonly System.Type JoinPaths = typeof(Nodetool.Types.Nodes.Core.JoinPaths);
        public static readonly System.Type JoinURL = typeof(Nodetool.Types.Nodes.Core.JoinURL);
        public static readonly System.Type Kandinsky3Img2Img = typeof(Nodetool.Types.Nodes.Core.Kandinsky3Img2Img);
        public static readonly System.Type LLM = typeof(Nodetool.Types.Nodes.Core.LLM);
        public static readonly System.Type LLMStreaming = typeof(Nodetool.Types.Nodes.Core.LLMStreaming);
        public static readonly System.Type Length = typeof(Nodetool.Types.Nodes.Core.Length);
        public static readonly System.Type List = typeof(Nodetool.Types.Nodes.Core.List);
        public static readonly System.Type ListAgent = typeof(Nodetool.Types.Nodes.Core.ListAgent);
        public static readonly System.Type ListFiles = typeof(Nodetool.Types.Nodes.Core.ListFiles);
        public static readonly System.Type ListGenerator = typeof(Nodetool.Types.Nodes.Core.ListGenerator);
        public static readonly System.Type ListInput = typeof(Nodetool.Types.Nodes.Core.ListInput);
        public static readonly System.Type ListOutput = typeof(Nodetool.Types.Nodes.Core.ListOutput);
        public static readonly System.Type ListScheduledEvents = typeof(Nodetool.Types.Nodes.Core.ListScheduledEvents);
        public static readonly System.Type ListTarFile = typeof(Nodetool.Types.Nodes.Core.ListTarFile);
        public static readonly System.Type LoRASelector = typeof(Nodetool.Types.Nodes.Core.LoRASelector);
        public static readonly System.Type LoRASelectorXL = typeof(Nodetool.Types.Nodes.Core.LoRASelectorXL);
        public static readonly System.Type LoadAudioAssets = typeof(Nodetool.Types.Nodes.Core.LoadAudioAssets);
        public static readonly System.Type LoadAudioFile = typeof(Nodetool.Types.Nodes.Core.LoadAudioFile);
        public static readonly System.Type LoadBytesFile = typeof(Nodetool.Types.Nodes.Core.LoadBytesFile);
        public static readonly System.Type LoadCSVAssets = typeof(Nodetool.Types.Nodes.Core.LoadCSVAssets);
        public static readonly System.Type LoadCSVFile = typeof(Nodetool.Types.Nodes.Core.LoadCSVFile);
        public static readonly System.Type LoadDocumentFile = typeof(Nodetool.Types.Nodes.Core.LoadDocumentFile);
        public static readonly System.Type LoadImageAssets = typeof(Nodetool.Types.Nodes.Core.LoadImageAssets);
        public static readonly System.Type LoadImageFile = typeof(Nodetool.Types.Nodes.Core.LoadImageFile);
        public static readonly System.Type LoadJSONAssets = typeof(Nodetool.Types.Nodes.Core.LoadJSONAssets);
        public static readonly System.Type LoadTextAssets = typeof(Nodetool.Types.Nodes.Core.LoadTextAssets);
        public static readonly System.Type LoadVideoAssets = typeof(Nodetool.Types.Nodes.Core.LoadVideoAssets);
        public static readonly System.Type LoadVideoFile = typeof(Nodetool.Types.Nodes.Core.LoadVideoFile);
        public static readonly System.Type LogicalOperator = typeof(Nodetool.Types.Nodes.Core.LogicalOperator);
        public static readonly System.Type MakeDictionary = typeof(Nodetool.Types.Nodes.Core.MakeDictionary);
        public static readonly System.Type MapField = typeof(Nodetool.Types.Nodes.Core.MapField);
        public static readonly System.Type MarkdownSplitter = typeof(Nodetool.Types.Nodes.Core.MarkdownSplitter);
        public static readonly System.Type Maximum = typeof(Nodetool.Types.Nodes.Core.Maximum);
        public static readonly System.Type Merge = typeof(Nodetool.Types.Nodes.Core.Merge);
        public static readonly System.Type Minimum = typeof(Nodetool.Types.Nodes.Core.Minimum);
        public static readonly System.Type ModifiedTime = typeof(Nodetool.Types.Nodes.Core.ModifiedTime);
        public static readonly System.Type Modulus = typeof(Nodetool.Types.Nodes.Core.Modulus);
        public static readonly System.Type MonoToStereo = typeof(Nodetool.Types.Nodes.Core.MonoToStereo);
        public static readonly System.Type MonthsAgo = typeof(Nodetool.Types.Nodes.Core.MonthsAgo);
        public static readonly System.Type MonthsFromNow = typeof(Nodetool.Types.Nodes.Core.MonthsFromNow);
        public static readonly System.Type MoveFile = typeof(Nodetool.Types.Nodes.Core.MoveFile);
        public static readonly System.Type MoveToArchive = typeof(Nodetool.Types.Nodes.Core.MoveToArchive);
        public static readonly System.Type Multiply = typeof(Nodetool.Types.Nodes.Core.Multiply);
        public static readonly System.Type MusicGen = typeof(Nodetool.Types.Nodes.Core.MusicGen);
        public static readonly System.Type MusicLDM = typeof(Nodetool.Types.Nodes.Core.MusicLDM);
        public static readonly System.Type Normalize = typeof(Nodetool.Types.Nodes.Core.Normalize);
        public static readonly System.Type NormalizePath = typeof(Nodetool.Types.Nodes.Core.NormalizePath);
        public static readonly System.Type Not = typeof(Nodetool.Types.Nodes.Core.Not);
        public static readonly System.Type Now = typeof(Nodetool.Types.Nodes.Core.Now);
        public static readonly System.Type ObjectDetection = typeof(Nodetool.Types.Nodes.Core.ObjectDetection);
        public static readonly System.Type Overlay = typeof(Nodetool.Types.Nodes.Core.Overlay);
        public static readonly System.Type OverlayAudio = typeof(Nodetool.Types.Nodes.Core.OverlayAudio);
        public static readonly System.Type ParseDate = typeof(Nodetool.Types.Nodes.Core.ParseDate);
        public static readonly System.Type ParseDateTime = typeof(Nodetool.Types.Nodes.Core.ParseDateTime);
        public static readonly System.Type ParseDict = typeof(Nodetool.Types.Nodes.Core.ParseDict);
        public static readonly System.Type ParseJSON = typeof(Nodetool.Types.Nodes.Core.ParseJSON);
        public static readonly System.Type ParseList = typeof(Nodetool.Types.Nodes.Core.ParseList);
        public static readonly System.Type ParseURL = typeof(Nodetool.Types.Nodes.Core.ParseURL);
        public static readonly System.Type Paste = typeof(Nodetool.Types.Nodes.Core.Paste);
        public static readonly System.Type PathInput = typeof(Nodetool.Types.Nodes.Core.PathInput);
        public static readonly System.Type PathToString = typeof(Nodetool.Types.Nodes.Core.PathToString);
        public static readonly System.Type Peek = typeof(Nodetool.Types.Nodes.Core.Peek);
        public static readonly System.Type Pivot = typeof(Nodetool.Types.Nodes.Core.Pivot);
        public static readonly System.Type PostRequest = typeof(Nodetool.Types.Nodes.Core.PostRequest);
        public static readonly System.Type PostRequestBinary = typeof(Nodetool.Types.Nodes.Core.PostRequestBinary);
        public static readonly System.Type Power = typeof(Nodetool.Types.Nodes.Core.Power);
        public static readonly System.Type Product = typeof(Nodetool.Types.Nodes.Core.Product);
        public static readonly System.Type PutRequest = typeof(Nodetool.Types.Nodes.Core.PutRequest);
        public static readonly System.Type QueryImage = typeof(Nodetool.Types.Nodes.Core.QueryImage);
        public static readonly System.Type QueryText = typeof(Nodetool.Types.Nodes.Core.QueryText);
        public static readonly System.Type QuestionAnswering = typeof(Nodetool.Types.Nodes.Core.QuestionAnswering);
        public static readonly System.Type QuoteURL = typeof(Nodetool.Types.Nodes.Core.QuoteURL);
        public static readonly System.Type RandomBool = typeof(Nodetool.Types.Nodes.Core.RandomBool);
        public static readonly System.Type RandomChoice = typeof(Nodetool.Types.Nodes.Core.RandomChoice);
        public static readonly System.Type RandomFloat = typeof(Nodetool.Types.Nodes.Core.RandomFloat);
        public static readonly System.Type RandomInt = typeof(Nodetool.Types.Nodes.Core.RandomInt);
        public static readonly System.Type Randomize = typeof(Nodetool.Types.Nodes.Core.Randomize);
        public static readonly System.Type RealESRGANNode = typeof(Nodetool.Types.Nodes.Core.RealESRGANNode);
        public static readonly System.Type RecursiveTextSplitter = typeof(Nodetool.Types.Nodes.Core.RecursiveTextSplitter);
        public static readonly System.Type ReduceDictionaries = typeof(Nodetool.Types.Nodes.Core.ReduceDictionaries);
        public static readonly System.Type RegexMatch = typeof(Nodetool.Types.Nodes.Core.RegexMatch);
        public static readonly System.Type RegexReplace = typeof(Nodetool.Types.Nodes.Core.RegexReplace);
        public static readonly System.Type RegexSplit = typeof(Nodetool.Types.Nodes.Core.RegexSplit);
        public static readonly System.Type RegexValidate = typeof(Nodetool.Types.Nodes.Core.RegexValidate);
        public static readonly System.Type RelativePath = typeof(Nodetool.Types.Nodes.Core.RelativePath);
        public static readonly System.Type Remove = typeof(Nodetool.Types.Nodes.Core.Remove);
        public static readonly System.Type RemoveOverlap = typeof(Nodetool.Types.Nodes.Core.RemoveOverlap);
        public static readonly System.Type RemoveSilence = typeof(Nodetool.Types.Nodes.Core.RemoveSilence);
        public static readonly System.Type Rename = typeof(Nodetool.Types.Nodes.Core.Rename);
        public static readonly System.Type Repeat = typeof(Nodetool.Types.Nodes.Core.Repeat);
        public static readonly System.Type Replace = typeof(Nodetool.Types.Nodes.Core.Replace);
        public static readonly System.Type Reranker = typeof(Nodetool.Types.Nodes.Core.Reranker);
        public static readonly System.Type Resize = typeof(Nodetool.Types.Nodes.Core.Resize);
        public static readonly System.Type ResizeNode = typeof(Nodetool.Types.Nodes.Core.ResizeNode);
        public static readonly System.Type Reverse = typeof(Nodetool.Types.Nodes.Core.Reverse);
        public static readonly System.Type Rotate = typeof(Nodetool.Types.Nodes.Core.Rotate);
        public static readonly System.Type RowIterator = typeof(Nodetool.Types.Nodes.Core.RowIterator);
        public static readonly System.Type SVGGenerator = typeof(Nodetool.Types.Nodes.Core.SVGGenerator);
        public static readonly System.Type Saturation = typeof(Nodetool.Types.Nodes.Core.Saturation);
        public static readonly System.Type SaveAudio = typeof(Nodetool.Types.Nodes.Core.SaveAudio);
        public static readonly System.Type SaveAudioFile = typeof(Nodetool.Types.Nodes.Core.SaveAudioFile);
        public static readonly System.Type SaveBytesFile = typeof(Nodetool.Types.Nodes.Core.SaveBytesFile);
        public static readonly System.Type SaveCSVDataframeFile = typeof(Nodetool.Types.Nodes.Core.SaveCSVDataframeFile);
        public static readonly System.Type SaveCSVFile = typeof(Nodetool.Types.Nodes.Core.SaveCSVFile);
        public static readonly System.Type SaveDataframe = typeof(Nodetool.Types.Nodes.Core.SaveDataframe);
        public static readonly System.Type SaveDocumentFile = typeof(Nodetool.Types.Nodes.Core.SaveDocumentFile);
        public static readonly System.Type SaveImage = typeof(Nodetool.Types.Nodes.Core.SaveImage);
        public static readonly System.Type SaveImageFile = typeof(Nodetool.Types.Nodes.Core.SaveImageFile);
        public static readonly System.Type SaveList = typeof(Nodetool.Types.Nodes.Core.SaveList);
        public static readonly System.Type SaveText = typeof(Nodetool.Types.Nodes.Core.SaveText);
        public static readonly System.Type SaveVideo = typeof(Nodetool.Types.Nodes.Core.SaveVideo);
        public static readonly System.Type SaveVideoFile = typeof(Nodetool.Types.Nodes.Core.SaveVideoFile);
        public static readonly System.Type Scale = typeof(Nodetool.Types.Nodes.Core.Scale);
        public static readonly System.Type ScheduledEventFields = typeof(Nodetool.Types.Nodes.Core.ScheduledEventFields);
        public static readonly System.Type Screenshot = typeof(Nodetool.Types.Nodes.Core.Screenshot);
        public static readonly System.Type SelectColumn = typeof(Nodetool.Types.Nodes.Core.SelectColumn);
        public static readonly System.Type SelectElements = typeof(Nodetool.Types.Nodes.Core.SelectElements);
        public static readonly System.Type SemanticSplitter = typeof(Nodetool.Types.Nodes.Core.SemanticSplitter);
        public static readonly System.Type SendEmail = typeof(Nodetool.Types.Nodes.Core.SendEmail);
        public static readonly System.Type SentenceSimilarity = typeof(Nodetool.Types.Nodes.Core.SentenceSimilarity);
        public static readonly System.Type SentenceSplitter = typeof(Nodetool.Types.Nodes.Core.SentenceSplitter);
        public static readonly System.Type SequenceIterator = typeof(Nodetool.Types.Nodes.Core.SequenceIterator);
        public static readonly System.Type SetEnvironmentVariable = typeof(Nodetool.Types.Nodes.Core.SetEnvironmentVariable);
        public static readonly System.Type SetSecret = typeof(Nodetool.Types.Nodes.Core.SetSecret);
        public static readonly System.Type SetSpeed = typeof(Nodetool.Types.Nodes.Core.SetSpeed);
        public static readonly System.Type Sharpness = typeof(Nodetool.Types.Nodes.Core.Sharpness);
        public static readonly System.Type Shorten = typeof(Nodetool.Types.Nodes.Core.Shorten);
        public static readonly System.Type ShowNotification = typeof(Nodetool.Types.Nodes.Core.ShowNotification);
        public static readonly System.Type SimilarityRatio = typeof(Nodetool.Types.Nodes.Core.SimilarityRatio);
        public static readonly System.Type SimpleAgentNode = typeof(Nodetool.Types.Nodes.Core.SimpleAgentNode);
        public static readonly System.Type Sine = typeof(Nodetool.Types.Nodes.Core.Sine);
        public static readonly System.Type Slice = typeof(Nodetool.Types.Nodes.Core.Slice);
        public static readonly System.Type SliceAudio = typeof(Nodetool.Types.Nodes.Core.SliceAudio);
        public static readonly System.Type Some = typeof(Nodetool.Types.Nodes.Core.Some);
        public static readonly System.Type Sort = typeof(Nodetool.Types.Nodes.Core.Sort);
        public static readonly System.Type SortByColumn = typeof(Nodetool.Types.Nodes.Core.SortByColumn);
        public static readonly System.Type Split = typeof(Nodetool.Types.Nodes.Core.Split);
        public static readonly System.Type SplitExtension = typeof(Nodetool.Types.Nodes.Core.SplitExtension);
        public static readonly System.Type SplitPath = typeof(Nodetool.Types.Nodes.Core.SplitPath);
        public static readonly System.Type Sqrt = typeof(Nodetool.Types.Nodes.Core.Sqrt);
        public static readonly System.Type Stabilize = typeof(Nodetool.Types.Nodes.Core.Stabilize);
        public static readonly System.Type StableAudioNode = typeof(Nodetool.Types.Nodes.Core.StableAudioNode);
        public static readonly System.Type StableDiffusion = typeof(Nodetool.Types.Nodes.Core.StableDiffusion);
        public static readonly System.Type StableDiffusionControlNetImg2ImgNode = typeof(Nodetool.Types.Nodes.Core.StableDiffusionControlNetImg2ImgNode);
        public static readonly System.Type StableDiffusionControlNetInpaintNode = typeof(Nodetool.Types.Nodes.Core.StableDiffusionControlNetInpaintNode);
        public static readonly System.Type StableDiffusionControlNetNode = typeof(Nodetool.Types.Nodes.Core.StableDiffusionControlNetNode);
        public static readonly System.Type StableDiffusionImg2ImgNode = typeof(Nodetool.Types.Nodes.Core.StableDiffusionImg2ImgNode);
        public static readonly System.Type StableDiffusionInpaintNode = typeof(Nodetool.Types.Nodes.Core.StableDiffusionInpaintNode);
        public static readonly System.Type StableDiffusionUpscale = typeof(Nodetool.Types.Nodes.Core.StableDiffusionUpscale);
        public static readonly System.Type StableDiffusionXL = typeof(Nodetool.Types.Nodes.Core.StableDiffusionXL);
        public static readonly System.Type StableDiffusionXLControlNetNode = typeof(Nodetool.Types.Nodes.Core.StableDiffusionXLControlNetNode);
        public static readonly System.Type StableDiffusionXLImg2Img = typeof(Nodetool.Types.Nodes.Core.StableDiffusionXLImg2Img);
        public static readonly System.Type StableDiffusionXLInpainting = typeof(Nodetool.Types.Nodes.Core.StableDiffusionXLInpainting);
        public static readonly System.Type StableVideoDiffusion = typeof(Nodetool.Types.Nodes.Core.StableVideoDiffusion);
        public static readonly System.Type StartOfDay = typeof(Nodetool.Types.Nodes.Core.StartOfDay);
        public static readonly System.Type StartOfMonth = typeof(Nodetool.Types.Nodes.Core.StartOfMonth);
        public static readonly System.Type StartOfWeek = typeof(Nodetool.Types.Nodes.Core.StartOfWeek);
        public static readonly System.Type StartOfYear = typeof(Nodetool.Types.Nodes.Core.StartOfYear);
        public static readonly System.Type StartsWith = typeof(Nodetool.Types.Nodes.Core.StartsWith);
        public static readonly System.Type StereoToMono = typeof(Nodetool.Types.Nodes.Core.StereoToMono);
        public static readonly System.Type String = typeof(Nodetool.Types.Nodes.Core.String);
        public static readonly System.Type StringInput = typeof(Nodetool.Types.Nodes.Core.StringInput);
        public static readonly System.Type StringOutput = typeof(Nodetool.Types.Nodes.Core.StringOutput);
        public static readonly System.Type StringifyJSON = typeof(Nodetool.Types.Nodes.Core.StringifyJSON);
        public static readonly System.Type Subtract = typeof(Nodetool.Types.Nodes.Core.Subtract);
        public static readonly System.Type Sum = typeof(Nodetool.Types.Nodes.Core.Sum);
        public static readonly System.Type Summarization = typeof(Nodetool.Types.Nodes.Core.Summarization);
        public static readonly System.Type Summarize = typeof(Nodetool.Types.Nodes.Core.Summarize);
        public static readonly System.Type Summarizer = typeof(Nodetool.Types.Nodes.Core.Summarizer);
        public static readonly System.Type SummarizerStreaming = typeof(Nodetool.Types.Nodes.Core.SummarizerStreaming);
        public static readonly System.Type Swin2SR = typeof(Nodetool.Types.Nodes.Core.Swin2SR);
        public static readonly System.Type TableQuestionAnswering = typeof(Nodetool.Types.Nodes.Core.TableQuestionAnswering);
        public static readonly System.Type TaskPlannerNode = typeof(Nodetool.Types.Nodes.Core.TaskPlannerNode);
        public static readonly System.Type Template = typeof(Nodetool.Types.Nodes.Core.Template);
        public static readonly System.Type TextClassification = typeof(Nodetool.Types.Nodes.Core.TextClassification);
        public static readonly System.Type TextClassifier = typeof(Nodetool.Types.Nodes.Core.TextClassifier);
        public static readonly System.Type TextGeneration = typeof(Nodetool.Types.Nodes.Core.TextGeneration);
        public static readonly System.Type TextInput = typeof(Nodetool.Types.Nodes.Core.TextInput);
        public static readonly System.Type TextToImage = typeof(Nodetool.Types.Nodes.Core.TextToImage);
        public static readonly System.Type TextToSpeech = typeof(Nodetool.Types.Nodes.Core.TextToSpeech);
        public static readonly System.Type TextToText = typeof(Nodetool.Types.Nodes.Core.TextToText);
        public static readonly System.Type ToList = typeof(Nodetool.Types.Nodes.Core.ToList);
        public static readonly System.Type Today = typeof(Nodetool.Types.Nodes.Core.Today);
        public static readonly System.Type TokenClassification = typeof(Nodetool.Types.Nodes.Core.TokenClassification);
        public static readonly System.Type Transcribe = typeof(Nodetool.Types.Nodes.Core.Transcribe);
        public static readonly System.Type Transform = typeof(Nodetool.Types.Nodes.Core.Transform);
        public static readonly System.Type Transition = typeof(Nodetool.Types.Nodes.Core.Transition);
        public static readonly System.Type Translate = typeof(Nodetool.Types.Nodes.Core.Translate);
        public static readonly System.Type Translation = typeof(Nodetool.Types.Nodes.Core.Translation);
        public static readonly System.Type Trim = typeof(Nodetool.Types.Nodes.Core.Trim);
        public static readonly System.Type Unescape = typeof(Nodetool.Types.Nodes.Core.Unescape);
        public static readonly System.Type UnifiedDiff = typeof(Nodetool.Types.Nodes.Core.UnifiedDiff);
        public static readonly System.Type Union = typeof(Nodetool.Types.Nodes.Core.Union);
        public static readonly System.Type UnquoteURL = typeof(Nodetool.Types.Nodes.Core.UnquoteURL);
        public static readonly System.Type Update = typeof(Nodetool.Types.Nodes.Core.Update);
        public static readonly System.Type ValidateJSON = typeof(Nodetool.Types.Nodes.Core.ValidateJSON);
        public static readonly System.Type Video = typeof(Nodetool.Types.Nodes.Core.Video);
        public static readonly System.Type VideoInput = typeof(Nodetool.Types.Nodes.Core.VideoInput);
        public static readonly System.Type VideoOutput = typeof(Nodetool.Types.Nodes.Core.VideoOutput);
        public static readonly System.Type VisualQuestionAnswering = typeof(Nodetool.Types.Nodes.Core.VisualQuestionAnswering);
        public static readonly System.Type VisualizeObjectDetection = typeof(Nodetool.Types.Nodes.Core.VisualizeObjectDetection);
        public static readonly System.Type WebFetch = typeof(Nodetool.Types.Nodes.Core.WebFetch);
        public static readonly System.Type WebSearch = typeof(Nodetool.Types.Nodes.Core.WebSearch);
        public static readonly System.Type WebsiteContentExtractor = typeof(Nodetool.Types.Nodes.Core.WebsiteContentExtractor);
        public static readonly System.Type Whisper = typeof(Nodetool.Types.Nodes.Core.Whisper);
        public static readonly System.Type Wrap = typeof(Nodetool.Types.Nodes.Core.Wrap);
        public static readonly System.Type ZeroShotAudioClassifier = typeof(Nodetool.Types.Nodes.Core.ZeroShotAudioClassifier);
        public static readonly System.Type ZeroShotImageClassifier = typeof(Nodetool.Types.Nodes.Core.ZeroShotImageClassifier);
        public static readonly System.Type ZeroShotObjectDetection = typeof(Nodetool.Types.Nodes.Core.ZeroShotObjectDetection);
        public static readonly System.Type ZeroShotTextClassifier = typeof(Nodetool.Types.Nodes.Core.ZeroShotTextClassifier);
        public static readonly System.Type Zip = typeof(Nodetool.Types.Nodes.Core.Zip);
        #endregion
    }
}
