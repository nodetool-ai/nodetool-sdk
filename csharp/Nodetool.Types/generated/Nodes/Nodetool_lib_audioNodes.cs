//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the NodeTool SDK Type Generator.
//     Runtime Version: Python
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using MessagePack;
using System.Collections.Generic;

namespace Nodetool.Types.Nodes.Nodetool_lib_audio;

/// <summary>
/// Provides access to all nodes from the Nodetool_lib_audio package.
/// This is an auto-generated file containing node information for the Nodetool_lib_audio package.
/// </summary>
public static class Nodetool_lib_audioNodes
{
    /// <summary>
    /// Provides static access to all node information in the Nodetool_lib_audio package.
    /// </summary>
    public static class Nodes
    {
        #region Package Nodes
        // Node types from the Nodetool_lib_audio package
        public static readonly System.Type Bitcrush = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.Bitcrush);
        public static readonly System.Type Compress = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.Compress);
        public static readonly System.Type Delay = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.Delay);
        public static readonly System.Type Distortion = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.Distortion);
        public static readonly System.Type Envelope = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.Envelope);
        public static readonly System.Type FM_Synthesis = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.FM_Synthesis);
        public static readonly System.Type Gain = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.Gain);
        public static readonly System.Type HighPassFilter = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.HighPassFilter);
        public static readonly System.Type HighShelfFilter = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.HighShelfFilter);
        public static readonly System.Type Limiter = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.Limiter);
        public static readonly System.Type LowPassFilter = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.LowPassFilter);
        public static readonly System.Type LowShelfFilter = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.LowShelfFilter);
        public static readonly System.Type NoiseGate = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.NoiseGate);
        public static readonly System.Type Oscillator = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.Oscillator);
        public static readonly System.Type PeakFilter = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.PeakFilter);
        public static readonly System.Type Phaser = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.Phaser);
        public static readonly System.Type PinkNoise = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.PinkNoise);
        public static readonly System.Type PitchShift = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.PitchShift);
        public static readonly System.Type Reverb = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.Reverb);
        public static readonly System.Type TimeStretch = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.TimeStretch);
        public static readonly System.Type WhiteNoise = typeof(Nodetool.Types.Nodes.Nodetool_lib_audio.WhiteNoise);
        #endregion
    }
}
