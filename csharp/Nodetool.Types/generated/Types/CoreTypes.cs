//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the NodeTool SDK Type Generator.
//     Runtime Version: Python
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using MessagePack;
using System.Collections.Generic;

namespace Nodetool.Types.Core;

/// <summary>
/// Provides access to all core NodeTool types.
/// This is an auto-generated file containing type information for core NodeTool types.
/// </summary>
public static class CoreTypes
{
    /// <summary>
    /// Provides static access to all core type information.
    /// </summary>
    public static class Types
    {
        #region Core Types
        // Core types from nodetool-core package
        public static readonly System.Type AssetRef = typeof(Nodetool.Types.AssetRef);
        public static readonly System.Type AudioChunk = typeof(Nodetool.Types.AudioChunk);
        public static readonly System.Type AudioRef = typeof(Nodetool.Types.AudioRef);
        public static readonly System.Type BoundingBox = typeof(Nodetool.Types.BoundingBox);
        public static readonly System.Type CLIP = typeof(Nodetool.Types.CLIP);
        public static readonly System.Type CLIPFile = typeof(Nodetool.Types.CLIPFile);
        public static readonly System.Type CLIPVision = typeof(Nodetool.Types.CLIPVision);
        public static readonly System.Type CLIPVisionFile = typeof(Nodetool.Types.CLIPVisionFile);
        public static readonly System.Type CLIPVisionOutput = typeof(Nodetool.Types.CLIPVisionOutput);
        public static readonly System.Type CalendarEvent = typeof(Nodetool.Types.CalendarEvent);
        public static readonly System.Type ChartConfig = typeof(Nodetool.Types.ChartConfig);
        public static readonly System.Type ChartData = typeof(Nodetool.Types.ChartData);
        public static readonly System.Type CheckpointFile = typeof(Nodetool.Types.CheckpointFile);
        public static readonly System.Type Collection = typeof(Nodetool.Types.Collection);
        public static readonly System.Type ColorRef = typeof(Nodetool.Types.ColorRef);
        public static readonly System.Type ComfyData = typeof(Nodetool.Types.ComfyData);
        public static readonly System.Type ComfyModel = typeof(Nodetool.Types.ComfyModel);
        public static readonly System.Type Conditioning = typeof(Nodetool.Types.Conditioning);
        public static readonly System.Type ControlNet = typeof(Nodetool.Types.ControlNet);
        public static readonly System.Type ControlNetFile = typeof(Nodetool.Types.ControlNetFile);
        public static readonly System.Type DataSeries = typeof(Nodetool.Types.DataSeries);
        public static readonly System.Type DataframeRef = typeof(Nodetool.Types.DataframeRef);
        public static readonly System.Type Date = typeof(Nodetool.Types.Date);
        public static readonly System.Type DateSearchCondition = typeof(Nodetool.Types.DateSearchCondition);
        public static readonly System.Type Datetime = typeof(Nodetool.Types.Datetime);
        public static readonly System.Type DocumentRef = typeof(Nodetool.Types.DocumentRef);
        public static readonly System.Type Email = typeof(Nodetool.Types.Email);
        public static readonly System.Type EmailSearchCriteria = typeof(Nodetool.Types.EmailSearchCriteria);
        public static readonly System.Type Embeds = typeof(Nodetool.Types.Embeds);
        public static readonly System.Type Event = typeof(Nodetool.Types.Event);
        public static readonly System.Type ExcelRef = typeof(Nodetool.Types.ExcelRef);
        public static readonly System.Type FaceAnalysis = typeof(Nodetool.Types.FaceAnalysis);
        public static readonly System.Type FaceEmbeds = typeof(Nodetool.Types.FaceEmbeds);
        public static readonly System.Type FilePath = typeof(Nodetool.Types.FilePath);
        public static readonly System.Type FolderPath = typeof(Nodetool.Types.FolderPath);
        public static readonly System.Type FolderRef = typeof(Nodetool.Types.FolderRef);
        public static readonly System.Type FontRef = typeof(Nodetool.Types.FontRef);
        public static readonly System.Type GLIGEN = typeof(Nodetool.Types.GLIGEN);
        public static readonly System.Type GLIGENFile = typeof(Nodetool.Types.GLIGENFile);
        public static readonly System.Type Guider = typeof(Nodetool.Types.Guider);
        public static readonly System.Type HFAudioClassification = typeof(Nodetool.Types.HFAudioClassification);
        public static readonly System.Type HFAudioToAudio = typeof(Nodetool.Types.HFAudioToAudio);
        public static readonly System.Type HFAutomaticSpeechRecognition = typeof(Nodetool.Types.HFAutomaticSpeechRecognition);
        public static readonly System.Type HFCLIP = typeof(Nodetool.Types.HFCLIP);
        public static readonly System.Type HFCLIPVision = typeof(Nodetool.Types.HFCLIPVision);
        public static readonly System.Type HFCheckpointModel = typeof(Nodetool.Types.HFCheckpointModel);
        public static readonly System.Type HFComputerVision = typeof(Nodetool.Types.HFComputerVision);
        public static readonly System.Type HFControlNet = typeof(Nodetool.Types.HFControlNet);
        public static readonly System.Type HFControlNetSDXL = typeof(Nodetool.Types.HFControlNetSDXL);
        public static readonly System.Type HFDepthEstimation = typeof(Nodetool.Types.HFDepthEstimation);
        public static readonly System.Type HFDocumentQuestionAnswering = typeof(Nodetool.Types.HFDocumentQuestionAnswering);
        public static readonly System.Type HFFeatureExtraction = typeof(Nodetool.Types.HFFeatureExtraction);
        public static readonly System.Type HFFillMask = typeof(Nodetool.Types.HFFillMask);
        public static readonly System.Type HFFlux = typeof(Nodetool.Types.HFFlux);
        public static readonly System.Type HFGOTOCR = typeof(Nodetool.Types.HFGOTOCR);
        public static readonly System.Type HFIPAdapter = typeof(Nodetool.Types.HFIPAdapter);
        public static readonly System.Type HFImageClassification = typeof(Nodetool.Types.HFImageClassification);
        public static readonly System.Type HFImageFeatureExtraction = typeof(Nodetool.Types.HFImageFeatureExtraction);
        public static readonly System.Type HFImageSegmentation = typeof(Nodetool.Types.HFImageSegmentation);
        public static readonly System.Type HFImageTextToText = typeof(Nodetool.Types.HFImageTextToText);
        public static readonly System.Type HFImageTo3D = typeof(Nodetool.Types.HFImageTo3D);
        public static readonly System.Type HFImageToImage = typeof(Nodetool.Types.HFImageToImage);
        public static readonly System.Type HFImageToText = typeof(Nodetool.Types.HFImageToText);
        public static readonly System.Type HFImageToVideo = typeof(Nodetool.Types.HFImageToVideo);
        public static readonly System.Type HFLTXV = typeof(Nodetool.Types.HFLTXV);
        public static readonly System.Type HFLoraSD = typeof(Nodetool.Types.HFLoraSD);
        public static readonly System.Type HFLoraSDConfig = typeof(Nodetool.Types.HFLoraSDConfig);
        public static readonly System.Type HFLoraSDXL = typeof(Nodetool.Types.HFLoraSDXL);
        public static readonly System.Type HFLoraSDXLConfig = typeof(Nodetool.Types.HFLoraSDXLConfig);
        public static readonly System.Type HFMaskGeneration = typeof(Nodetool.Types.HFMaskGeneration);
        public static readonly System.Type HFMiniCPM = typeof(Nodetool.Types.HFMiniCPM);
        public static readonly System.Type HFNaturalLanguageProcessing = typeof(Nodetool.Types.HFNaturalLanguageProcessing);
        public static readonly System.Type HFObjectDetection = typeof(Nodetool.Types.HFObjectDetection);
        public static readonly System.Type HFQuestionAnswering = typeof(Nodetool.Types.HFQuestionAnswering);
        public static readonly System.Type HFRealESRGAN = typeof(Nodetool.Types.HFRealESRGAN);
        public static readonly System.Type HFReranker = typeof(Nodetool.Types.HFReranker);
        public static readonly System.Type HFSentenceSimilarity = typeof(Nodetool.Types.HFSentenceSimilarity);
        public static readonly System.Type HFStableDiffusion = typeof(Nodetool.Types.HFStableDiffusion);
        public static readonly System.Type HFStableDiffusion3 = typeof(Nodetool.Types.HFStableDiffusion3);
        public static readonly System.Type HFStableDiffusionUpscale = typeof(Nodetool.Types.HFStableDiffusionUpscale);
        public static readonly System.Type HFStableDiffusionXL = typeof(Nodetool.Types.HFStableDiffusionXL);
        public static readonly System.Type HFStableDiffusionXLTurbo = typeof(Nodetool.Types.HFStableDiffusionXLTurbo);
        public static readonly System.Type HFStyleModel = typeof(Nodetool.Types.HFStyleModel);
        public static readonly System.Type HFSummarization = typeof(Nodetool.Types.HFSummarization);
        public static readonly System.Type HFTableQuestionAnswering = typeof(Nodetool.Types.HFTableQuestionAnswering);
        public static readonly System.Type HFText2TextGeneration = typeof(Nodetool.Types.HFText2TextGeneration);
        public static readonly System.Type HFTextClassification = typeof(Nodetool.Types.HFTextClassification);
        public static readonly System.Type HFTextGeneration = typeof(Nodetool.Types.HFTextGeneration);
        public static readonly System.Type HFTextTo3D = typeof(Nodetool.Types.HFTextTo3D);
        public static readonly System.Type HFTextToAudio = typeof(Nodetool.Types.HFTextToAudio);
        public static readonly System.Type HFTextToImage = typeof(Nodetool.Types.HFTextToImage);
        public static readonly System.Type HFTextToSpeech = typeof(Nodetool.Types.HFTextToSpeech);
        public static readonly System.Type HFTextToVideo = typeof(Nodetool.Types.HFTextToVideo);
        public static readonly System.Type HFTokenClassification = typeof(Nodetool.Types.HFTokenClassification);
        public static readonly System.Type HFTranslation = typeof(Nodetool.Types.HFTranslation);
        public static readonly System.Type HFUnconditionalImageGeneration = typeof(Nodetool.Types.HFUnconditionalImageGeneration);
        public static readonly System.Type HFUnet = typeof(Nodetool.Types.HFUnet);
        public static readonly System.Type HFVAE = typeof(Nodetool.Types.HFVAE);
        public static readonly System.Type HFVideoClassification = typeof(Nodetool.Types.HFVideoClassification);
        public static readonly System.Type HFVideoTextToText = typeof(Nodetool.Types.HFVideoTextToText);
        public static readonly System.Type HFVisualQuestionAnswering = typeof(Nodetool.Types.HFVisualQuestionAnswering);
        public static readonly System.Type HFVoiceActivityDetection = typeof(Nodetool.Types.HFVoiceActivityDetection);
        public static readonly System.Type HFZeroShotAudioClassification = typeof(Nodetool.Types.HFZeroShotAudioClassification);
        public static readonly System.Type HFZeroShotClassification = typeof(Nodetool.Types.HFZeroShotClassification);
        public static readonly System.Type HFZeroShotImageClassification = typeof(Nodetool.Types.HFZeroShotImageClassification);
        public static readonly System.Type HFZeroShotObjectDetection = typeof(Nodetool.Types.HFZeroShotObjectDetection);
        public static readonly System.Type HuggingFaceModel = typeof(Nodetool.Types.HuggingFaceModel);
        public static readonly System.Type IMAPConnection = typeof(Nodetool.Types.IMAPConnection);
        public static readonly System.Type IPAdapter = typeof(Nodetool.Types.IPAdapter);
        public static readonly System.Type IPAdapterFile = typeof(Nodetool.Types.IPAdapterFile);
        public static readonly System.Type ImageRef = typeof(Nodetool.Types.ImageRef);
        public static readonly System.Type ImageSegmentationResult = typeof(Nodetool.Types.ImageSegmentationResult);
        public static readonly System.Type ImageTensor = typeof(Nodetool.Types.ImageTensor);
        public static readonly System.Type InferenceProviderAudioClassificationModel = typeof(Nodetool.Types.InferenceProviderAudioClassificationModel);
        public static readonly System.Type InferenceProviderAutomaticSpeechRecognitionModel = typeof(Nodetool.Types.InferenceProviderAutomaticSpeechRecognitionModel);
        public static readonly System.Type InferenceProviderImageClassificationModel = typeof(Nodetool.Types.InferenceProviderImageClassificationModel);
        public static readonly System.Type InferenceProviderImageSegmentationModel = typeof(Nodetool.Types.InferenceProviderImageSegmentationModel);
        public static readonly System.Type InferenceProviderImageToImageModel = typeof(Nodetool.Types.InferenceProviderImageToImageModel);
        public static readonly System.Type InferenceProviderSummarizationModel = typeof(Nodetool.Types.InferenceProviderSummarizationModel);
        public static readonly System.Type InferenceProviderTextClassificationModel = typeof(Nodetool.Types.InferenceProviderTextClassificationModel);
        public static readonly System.Type InferenceProviderTextGenerationModel = typeof(Nodetool.Types.InferenceProviderTextGenerationModel);
        public static readonly System.Type InferenceProviderTextToAudioModel = typeof(Nodetool.Types.InferenceProviderTextToAudioModel);
        public static readonly System.Type InferenceProviderTextToImageModel = typeof(Nodetool.Types.InferenceProviderTextToImageModel);
        public static readonly System.Type InferenceProviderTextToSpeechModel = typeof(Nodetool.Types.InferenceProviderTextToSpeechModel);
        public static readonly System.Type InferenceProviderTextToTextModel = typeof(Nodetool.Types.InferenceProviderTextToTextModel);
        public static readonly System.Type InferenceProviderTranslationModel = typeof(Nodetool.Types.InferenceProviderTranslationModel);
        public static readonly System.Type InstantID = typeof(Nodetool.Types.InstantID);
        public static readonly System.Type InstantIDFile = typeof(Nodetool.Types.InstantIDFile);
        public static readonly System.Type JSONRef = typeof(Nodetool.Types.JSONRef);
        public static readonly System.Type LORA = typeof(Nodetool.Types.LORA);
        public static readonly System.Type LORAFile = typeof(Nodetool.Types.LORAFile);
        public static readonly System.Type LanguageModel = typeof(Nodetool.Types.LanguageModel);
        public static readonly System.Type Latent = typeof(Nodetool.Types.Latent);
        public static readonly System.Type LlamaModel = typeof(Nodetool.Types.LlamaModel);
        public static readonly System.Type LoRAConfig = typeof(Nodetool.Types.LoRAConfig);
        public static readonly System.Type LogEntry = typeof(Nodetool.Types.LogEntry);
        public static readonly System.Type LoraWeight = typeof(Nodetool.Types.LoraWeight);
        public static readonly System.Type Mask = typeof(Nodetool.Types.Mask);
        public static readonly System.Type Message = typeof(Nodetool.Types.Message);
        public static readonly System.Type ModelFile = typeof(Nodetool.Types.ModelFile);
        public static readonly System.Type ModelRef = typeof(Nodetool.Types.ModelRef);
        public static readonly System.Type NPArray = typeof(Nodetool.Types.NPArray);
        public static readonly System.Type NodeRef = typeof(Nodetool.Types.NodeRef);
        public static readonly System.Type Noise = typeof(Nodetool.Types.Noise);
        public static readonly System.Type OCRResult = typeof(Nodetool.Types.OCRResult);
        public static readonly System.Type ObjectDetectionResult = typeof(Nodetool.Types.ObjectDetectionResult);
        public static readonly System.Type OpenAIModel = typeof(Nodetool.Types.OpenAIModel);
        public static readonly System.Type PlotlyConfig = typeof(Nodetool.Types.PlotlyConfig);
        public static readonly System.Type PlotlySeries = typeof(Nodetool.Types.PlotlySeries);
        public static readonly System.Type REMBGSession = typeof(Nodetool.Types.REMBGSession);
        public static readonly System.Type RSSEntry = typeof(Nodetool.Types.RSSEntry);
        public static readonly System.Type RankingResult = typeof(Nodetool.Types.RankingResult);
        public static readonly System.Type RecordType = typeof(Nodetool.Types.RecordType);
        public static readonly System.Type SKLearnModel = typeof(Nodetool.Types.SKLearnModel);
        public static readonly System.Type SVGElement = typeof(Nodetool.Types.SVGElement);
        public static readonly System.Type SVGRef = typeof(Nodetool.Types.SVGRef);
        public static readonly System.Type Sampler = typeof(Nodetool.Types.Sampler);
        public static readonly System.Type Sigmas = typeof(Nodetool.Types.Sigmas);
        public static readonly System.Type StatsModelsModel = typeof(Nodetool.Types.StatsModelsModel);
        public static readonly System.Type StyleModel = typeof(Nodetool.Types.StyleModel);
        public static readonly System.Type StyleModelFile = typeof(Nodetool.Types.StyleModelFile);
        public static readonly System.Type SubTask = typeof(Nodetool.Types.SubTask);
        public static readonly System.Type Task = typeof(Nodetool.Types.Task);
        public static readonly System.Type TaskPlan = typeof(Nodetool.Types.TaskPlan);
        public static readonly System.Type TextChunk = typeof(Nodetool.Types.TextChunk);
        public static readonly System.Type TextRef = typeof(Nodetool.Types.TextRef);
        public static readonly System.Type ToolName = typeof(Nodetool.Types.ToolName);
        public static readonly System.Type UNet = typeof(Nodetool.Types.UNet);
        public static readonly System.Type UNetFile = typeof(Nodetool.Types.UNetFile);
        public static readonly System.Type UpscaleModel = typeof(Nodetool.Types.UpscaleModel);
        public static readonly System.Type UpscaleModelFile = typeof(Nodetool.Types.UpscaleModelFile);
        public static readonly System.Type VAE = typeof(Nodetool.Types.VAE);
        public static readonly System.Type VAEFile = typeof(Nodetool.Types.VAEFile);
        public static readonly System.Type VideoRef = typeof(Nodetool.Types.VideoRef);
        public static readonly System.Type WorkflowRef = typeof(Nodetool.Types.WorkflowRef);
        public static readonly System.Type unCLIPFile = typeof(Nodetool.Types.unCLIPFile);
        #endregion
    }
}
